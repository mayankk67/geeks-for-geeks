Given a singly linked list, find middle of the linked list. For example, if given linked list is 1->2->3->4->5 then output should be 3. 

/*
Please note that it's Function problem i.e.
you need to write your solution in the form of Function(s) only.
Driver Code to call/invoke your function would be added by GfG's Online Judge.*/


/* Node of a linked list
 class Node {
   int data;
    Node next;
    Node(int d)  { data = d;  next = null; }
}
 Linked List class
class LinkedList
{
    Node head;  // head of list
}
This is method only submission.  You only need to complete the method. */
class GFG
{
    // Function to find middle element a linked list
    int getMiddle(Node head)
   {
         Node cnt=head;
         int num=0;
         while(cnt!=null)
         {
             num++;
             cnt=cnt.next;
         }
         num=(num/2);
        Node cnt2=head;
         while(num--!=0)
            cnt2=cnt2.next;
         return cnt2.data;
   }
}
